<html>

<head>
  <title>swoole_event_add</title>
  <meta http-equiv=Content-Type content="text/html; charset=gb2312">
  <meta name="GENERATOR" content="Macrobject Word-2-CHM">
  <link rel="stylesheet" href="../../public/css/Word2Chm.css" type="text/css">
  <link rel="stylesheet" href="../../public/css/default.css" type="text/css" />
  <link rel="stylesheet" href="../../public/css/code.css" type="text/css" />
  <link rel="stylesheet" href="../../public/css/noframe.css" type="text/css" />
  <link rel="stylesheet" href="../../public/css/bootstrap.css" type="text/css" />
</head>

<body lang=ZH-CN link=blue vlink=purple style='text-justify-trim:punctuation'>

<div class="wiki_content blob instapaper_body">
        <article class="markdown-body entry-content" itemprop="mainContentOfPage">
                        <h1>swoole_event_add</h1>
                        <p>swoole_event_add函数用于将一个socket加入到swoole的reactor事件监听中。此函数可以用在Server或Client模式下。
函数原型：</p>

<pre><code class="php" data-language="php">bool swoole_event_add(int $sock, mixed $read_callback, mixed $write_callback = null, int $event_flag = null);
</code></pre>

<p>参数1可以为以下三种类型：</p>

<ul>
<li>int，就是文件描述符,包括swoole_client的socket,以及第三方扩展的socket（比如mysql）</li>
<li>stream资源，就是stream_socket_client/fsockopen 创建的资源</li>
<li>sockets资源，就是sockets扩展中 socket_create创建的资源
需要在编译时加入 ./configure --enable-sockets</li>
</ul>

<p>参数2为可读回调函数，参数3为可写事件回调，可以是字符串函数名、对象+方法、类静态方法或匿名函数，当此socket可读时回调指定的函数。</p>

<blockquote>
  <p>swoole_event_add在swoole1.6.2+之后可用<br />
  第3，4个参数在1.7.1版本后可用，用于监听可写事件回调，以及设置读写事件的监听</p>
</blockquote>

<p>参数4为事件类型的掩码，可选择关闭/开启可读可写事件，如SWOOLE_EVENT_READ，SWOOLE_EVENT_WRITE，或者SWOOLE_EVENT_READ | SWOOLE_EVENT_WRITE</p>

<p>在Server程序中使用，可以理解为在worker/taskworker进程中将此socket注册到epoll事件中。<br />
在Client程序中使用，可以理解为在客户端进程中将此socket注册到epoll事件中。</p>

<pre><code class="php" data-language="php">&lt;?php
$db = new mysqli;
$db-&gt;connect('127.0.0.1', 'root', 'root', 'test');
$db-&gt;query("show tables", MYSQLI_ASYNC);
swoole_event_add(swoole_get_mysqli_sock($db), function($db_sock) {
    global $db;
    $res = $db-&gt;reap_async_query();
    var_dump($res-&gt;fetch_all(MYSQLI_ASSOC));
    swoole_event_del(swoole_get_mysqli_sock($db)); // socket处理完成后，从epoll事件中移除socket 
});
$db2 = new mysqli;
$db2-&gt;connect('127.0.0.1', 'root', 'root', 'test');
$db2-&gt;query("show tables", MYSQLI_ASYNC);
swoole_event_add(swoole_get_mysqli_sock($db2), function($db_sock) {
    global $db2;
    $res = $db2-&gt;reap_async_query();
    var_dump($res-&gt;fetch_all(MYSQLI_ASSOC));
    swoole_event_del(swoole_get_mysqli_sock($db2)); // socket处理完成后，从epoll事件中移除socket 
});
echo "Finish\n";  //swoole_event_add不会阻塞进程，这行代码会顺序执行
</code></pre>

        </article>
<hr>
<div id="ds-thread" class="ds-thread" data-url="http://wiki.swoole.com/wiki/page/106.html" data-title="Swoole扩展" data-thread-key="wiki-106">
<script type="text/javascript">
</div>
</div>


  <table width="100%" cellpadding="0" cellspacing="0" border="0">
    <tr>
      <td class="moHeader">&nbsp;Swoole流程</td>
    </tr>
  </table>
  
  <p></p>

<div class=Section1 style='layout-grid:15.6pt'>


<p class=MsoNormal><span lang=EN-US><img width=572 height=468
src="temp.files/image001.jpg"></span></p>

</div>

</body>

</html>
