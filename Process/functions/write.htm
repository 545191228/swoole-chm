<html>
<head>
<title>swoole_process::write</title>
<meta http-equiv=Content-Type content="text/html; charset=gbk">
<link rel="stylesheet" href="../../public/css/Word2Chm.css" type="text/css">
<link rel="stylesheet" href="../../public/css/default.css" type="text/css" />
<link rel="stylesheet" href="../../public/css/noframe.css" type="text/css" />
<link rel="stylesheet" href="../../public/css/bootstrap.css" type="text/css" />
<link rel="stylesheet" href="../../public/styles/shThemeDefault.css" type="text/css"/>
<script type="text/javascript" src="../../public/scripts/shCore.js"></script>
<script type="text/javascript" src="../../public/scripts/shBrushPhp.js"></script>
<script type="text/javascript">
    SyntaxHighlighter.defaults['gutter'] = false;
    SyntaxHighlighter.defaults['toolbar'] = false;
    SyntaxHighlighter.all();
</script>
</head>

<body style='text-justify-trim: punctuation'>
    <div class="wiki_content">
        <article>
            <h1>swoole_process->write</h1>
            <hr>
            <p>向管道内写入数据。</p>
            <pre class="brush: php;">int swoole_process->write(string $data);
</pre>
            <ul>
                <li>在子进程内调用write，主进程会收到数据</li>
                <li>在主进程内调用write，子进程会收到数据</li>
            </ul>
            <p>示例：</p>
            <pre class="brush: php;">function callback_function_async(swoole_process $worker)
{
    $GLOBALS['worker'] = $worker;
    swoole_event_add($worker->pipe, function($pipe) {
        $worker = $GLOBALS['worker'];
        $recv = $worker->read();
        echo "From Master: $recv\n";
        //send data to master
        $worker->write("hello master\n");
        sleep(2);
        $worker->exit(0);
    });
}
</pre>
        </article>
        <hr>
    </div>
</body>
</html>
