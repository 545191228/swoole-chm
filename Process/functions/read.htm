<html>

<head>
  <title>swoole_process::read</title>
  <meta http-equiv=Content-Type content="text/html; charset=gbk">
  <meta name="GENERATOR" content="Macrobject Word-2-CHM">
  <link rel="stylesheet" href="../../public/css/Word2Chm.css" type="text/css">
  <link rel="stylesheet" href="../../public/css/default.css" type="text/css" />
  
  <link rel="stylesheet" href="../../public/css/noframe.css" type="text/css" />
  <link rel="stylesheet" href="../../public/css/bootstrap.css" type="text/css" />
</head>

<body style='text-justify-trim:punctuation'>

<div class="wiki_content">
       <article >
                        <h1>swoole_process->read</h1>
                        <p>从管道中读取数据。</p>

<pre class="brush: php;">int swoole_process-&gt;read(int $buffer_size=8192);
</pre>

<p>$buffer_size是缓冲区的大小，默认为8192，最大不超过64K</p>

<blockquote>
  <p>这里是同步阻塞读取的，可以使用<a href="../../AsyncIO/EventLoop/swoole_event_add.htm">swoole_event_add</a>将管道加入到事件循环中，变为异步模式</p>
</blockquote>

<p>示例：</p>

<pre class="brush: php;">function callback_function_async(swoole_process $worker)
{
    $GLOBALS['worker'] = $worker;
    swoole_event_add($worker-&gt;pipe, function($pipe) {
        $worker = $GLOBALS['worker'];
        $recv = $worker-&gt;read();

        echo "From Master: $recv\n";

        //send data to master
        $worker-&gt;write("hello master\n");

        sleep(2);

        $worker-&gt;exit(0);
    });
}
</pre>

        </article>
<hr>
</div>

</body>

</html>
