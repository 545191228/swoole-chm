<html>

<head>
  <title>多端口监听的使用</title>
  <meta http-equiv=Content-Type content="text/html; charset=gbk">
  <meta name="GENERATOR" content="Macrobject Word-2-CHM">
  <link rel="stylesheet" href="../../public/css/Word2Chm.css" type="text/css">
  <link rel="stylesheet" href="../../public/css/default.css" type="text/css" />
  <link rel="stylesheet" href="../../public/css/code.css" type="text/css" />
  <link rel="stylesheet" href="../../public/css/noframe.css" type="text/css" />
  <link rel="stylesheet" href="../../public/css/bootstrap.css" type="text/css" />
</head>

<body style='text-justify-trim:punctuation'>

<div class="wiki_content blob instapaper_body">
       <article class="markdown-body entry-content" >
                        <h1>多端口监听的使用</h1>
                        <p>Swoole提供了多端口监听的机制，这样可以同时监听UDP和TCP，同时监听内网地址和外网地址。内网地址和端口用于管理，外网地址用于对外服务。</p>

<pre><code class="php" data-language="php">$serv = new swoole_server("0.0.0.0", 9501);
//这里监听了一个UDP端口用来做内网管理
$serv-&gt;addlistener('127.0.0.1', 9502, SWOOLE_SOCK_UDP);
$serv-&gt;on('connect', function ($serv, $fd) {
    echo "Client:Connect.\n";
});
$serv-&gt;on('receive', function ($serv, $fd, $from_id, $data) {
    $info = $serv-&gt;connection_info($fd, $from_id);
    //来自9502的内网管理端口
    if($info['from_port'] == 9502) {
        $serv-&gt;send($fd, "welcome admin\n");
    }
    //来自外网
    else {
        $serv-&gt;send($fd, 'Swoole: '.$data);
    }
});
$serv-&gt;on('close', function ($serv, $fd) {
    echo "Client: Close.\n";
});
$serv-&gt;start();
</code></pre>

<p>Web层只需向此UDP端口发送管理的指令即可</p>

<pre><code class="php" data-language="php">$client = new swoole_client(SWOOLE_SOCK_UDP, SWOOLE_SOCK_SYNC);
$client-&gt;connect('127.0.0.1', 9502);
$client-&gt;send("admin");
echo $client-&gt;recv();
</code></pre>

        </article>
<hr>

</div>

</body>

</html>
